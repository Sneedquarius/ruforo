//! SeaORM Entity. Generated by sea-orm-codegen 0.4.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "permissions")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub category_id: i32,
    #[sea_orm(column_type = "Text")]
    pub label: String,
    pub sort: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::permission_categories::Entity",
        from = "Column::CategoryId",
        to = "super::permission_categories::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    PermissionCategories,
    #[sea_orm(has_many = "super::permission_values::Entity")]
    PermissionValues,
}

impl Related<super::permission_categories::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PermissionCategories.def()
    }
}

impl Related<super::permission_values::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PermissionValues.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
