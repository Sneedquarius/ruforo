//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "attachments")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub filename: String,
    pub hash: String,
    pub first_seen_at: DateTime,
    pub last_seen_at: DateTime,
    pub banned_at: Option<DateTime>,
    pub filesize: i64,
    pub file_height: Option<i32>,
    pub file_width: Option<i32>,
    #[sea_orm(column_type = "Text")]
    pub mime: String,
    pub meta: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::ugc_attachments::Entity")]
    UgcAttachments,
}

impl Related<super::ugc_attachments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UgcAttachments.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
