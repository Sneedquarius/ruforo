//! SeaORM Entity. Generated by sea-orm-codegen 0.4.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "forum_permissions")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub forum_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub collection_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::permission_collections::Entity",
        from = "Column::CollectionId",
        to = "super::permission_collections::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    PermissionCollections,
    #[sea_orm(
        belongs_to = "super::forums::Entity",
        from = "Column::ForumId",
        to = "super::forums::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Forums,
}

impl Related<super::permission_collections::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PermissionCollections.def()
    }
}

impl Related<super::forums::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Forums.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
