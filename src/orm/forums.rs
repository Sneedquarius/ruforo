//! SeaORM Entity. Generated by sea-orm-codegen 0.4.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "forums")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub label: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    pub last_post_id: Option<i32>,
    pub last_thread_id: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::posts::Entity",
        from = "Column::LastPostId",
        to = "super::posts::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    LastPost,
    #[sea_orm(
        belongs_to = "super::threads::Entity",
        from = "Column::LastThreadId",
        to = "super::threads::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    Threads,
}

impl Related<super::posts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LastPost.def()
    }
}

impl Related<super::threads::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Threads.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
